*------------------------------------------------------------*
User:                vpc19001
Date:                April 23, 2020
Time:                10:27:22
Site:                70085622
Platform:            X64_8PRO
Maintenance Release: 9.04.01M3P062415
EM Version:          14.1
* 
*------------------------------------------------------------*
* Training Log
Date:                April 23, 2020
Time:                10:27:15
*------------------------------------------------------------*
14714  proc freq data=EMWS1.FIMPORT_VariableSet noprint;
14715  table ROLE*LEVEL/out=WORK.FIMPORTMETA;
14716  run;
 
NOTE: There were 7 observations read from the data set EMWS1.FIMPORT_VARIABLESET.
NOTE: The data set WORK.FIMPORTMETA has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
 
 
14717  proc print data=WORK.FIMPORTMETA label noobs;
14718  var ROLE LEVEL COUNT;
14719  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
14720  title9 ' ';
14721  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
14722  run;
 
NOTE: There were 5 observations read from the data set WORK.FIMPORTMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
14723  title10;
 
14724  %let EMEXCEPTIONSTRING=;
15057  *------------------------------------------------------------*;
15058  * FIMPORT: Generation of macros and macro variables;
15059  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15060  *------------------------------------------------------------*;
 
15061  %let EMEXCEPTIONSTRING=;
15062  *------------------------------------------------------------*;
15063  * TRAIN: FIMPORT;
15064  *------------------------------------------------------------*;
15065  %let EM_ACTION = TRAIN;
15066  %let syscc = 0;
15067  /* Fimport.source */
15068  %macro main;
15069        %if %upcase(&EM_ACTION) = CREATE %then %do;
15070           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
15071           %include temp;
15072           filename temp;
15073           %create;
15074        %end;
15075        %else
15076        %if %upcase(&EM_ACTION) = TRAIN %then %do;
15077           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
15078           %include temp;
15079           filename temp;
15080           %train;
15081        %end;
15082        %else
15083        %if %upcase(&EM_ACTION) = UPDATE %then %do;
15084           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
15085           %include temp;
15086           filename temp;
15087           %update;
15088        %end;
15089        %else
15090        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
15091           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15092           %include temp;
15093           filename temp;
15094           %property;
15095        %end;
15096         %else
15097        %if %upcase(&EM_ACTION) = SCORE %then %do;
15098           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
15099           %include temp;
15100           filename temp;
15101           %score;
15102        %end;
15103        %else
15104        %if %upcase(&EM_ACTION) = REPORT %then %do;
15105           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
15106           %include temp;
15107           filename temp;
15108           %report;
15109        %end;
15110        %else
15111        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
15112           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15113           %include temp;
15114           filename temp;
15115           %openvariableset;
15116        %end;
15117        %else
15118        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
15119           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
15120           %include temp;
15121           filename temp;
15122           %closevariableset;
15123        %end;
15124  %mend main;
15125  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_TRAIN.SOURCE.
15126 +%EM_GETNAME(key=USERIMPORTFILE, type=FILE, extension=txt);
15127 +%macro appendExt;
15128 +   data _null_;
15129 +      tempuif =  trim("&EM_USER_USERIMPORTFILE");
15130 +      rfile = reverse(tempuif);
15131 +      period = indexc(rfile,".");
15132 +      uif = substr(tempuif, 1, length(tempuif)- period+1);
15133 +      newuif = trim(uif)||trim("&EM_PROPERTY_FILETYPE");
15134 +      call symput("EM_USER_USERIMPORTFILE",%bquote(newuif));
15135 +   run;
15136 +%mend appendExt;
15138 +%macro getNobs(ds);
15139 + %global dset nobs;
15140 + %let dset=&ds;
15141 + %let dsid = %sysfunc(open(&dset));
15142 + %if &dsid %then %do;
15143 +      %let nobs =%sysfunc(attrn(&dsid,nobs));
15144 +      %let rc = %sysfunc(close(&dsid));
15145 +   %end;
15146 + %else %put open for data set &dset failed - %sysfunc(sysmsg());
15147 +%mend getNobs;
15148 +%macro keepordrop;
15149 +  proc contents data=work.importfile noprint
15150 +  out=work.importattrs;
15151 +  run;
15152 +  %getNobs(work.importattrs);
15153 +  data _null_;
15154 +    set  work.importattrs;
15155 +    call symput("varname"||left(_n_),name);
15156 +  run;
15158 +  %put nobs=&nobs  maxcols=&EM_PROPERTY_MAXCOLS;
15159 +  /* importattrs contains 1 observation for each VARIABLE in the data set. */
15160 +  %if &nobs > &EM_PROPERTY_MAXCOLS %then %do;
15161 +     %let diff = %eval(&nobs - &EM_PROPERTY_MAXCOLS);
15162 +     %put diff=&diff;
15163 +     %if %eval(&diff ge &EM_PROPERTY_MAXCOLS) %then %do;
15164 +         %let kORd = keep;
15165 +             %let start=1;
15166 +             %let end = &EM_PROPERTY_MAXCOLS;
15167 +       %end;
15168 +     %else %do;
15169 +         %let kORd = drop;
15170 +             %let start = &EM_PROPERTY_MAXCOLS + 1;
15171 +             %let end = &nobs;
15172 +       %end;
15173 +     data &em_user_data;
15174 +        set &em_user_data;
15175 +        &kORd
15176 +        %do i = &start %to &end;
15177 +            &&varname&i
15178 +         %end;
15179 +        ;
15180 +     run;
15181 +%end;
15182 +%mend keepordrop;
15183 +%macro dropformatvars;
15184 +   %put fmtcnt=&fmtcnt;
15185 +   data new;
15186 +     set work.importfile;
15187 +     %do i = 1 %to &fmtcnt;
15188 +       x1zy&i =put(&&varname&i,&&fmt&i);
15189 +     %end;
15190 +   run;
15191 +   data new;
15192 +     set new;
15193 +     drop
15194 +     %do i = 1 %to &fmtcnt;
15195 +     &&varname&i
15196 +     %end;
15197 +     ;
15198 +   run;
15199 +   proc datasets library=work nolist;
15200 +     modify new;
15201 +     %do i = 1 %to &fmtcnt;
15202 +     rename x1zy&i=&&varname&i;
15203 +     %end;
15204 +   run; quit;
15205 +   data work.importfile;
15206 +     set new;
15207 +   run;
15208 +%mend;
15210 +%macro procimport(out=);
15211 +   %if %upcase(&EM_PROPERTY_FILETYPE)=MDB %then %do;
15212 +      proc import table=%sysfunc(trim(&EM_PROPERTY_ACCESSTABLE))
15213 +         out=&out
15214 +         dbms = ACCESS
15215 +         replace;
15216 +         database="%trim(&_IFILENAME)"
15217 +   %end;
15218 +   %else %do;
15219 +       proc import datafile="%trim(&_IFILENAME)"
15220 +          out=&out
15222 +      %put filetype=*&EM_PROPERTY_FILETYPE.*;
15223 +      %put delimiter=*&EM_PROPERTY_DELIMITER.*;
15224 +      %if %upcase(&EM_PROPERTY_FILETYPE) ^= TXT %then %do;
15225 +         dbms=&EM_PROPERTY_FILETYPE
15226 +      %end;
15227 +      %else %do;
15228 +         dbms=TAB
15229 +      %end;
15230 +      /* Work around for the following defects:S0560899 and S0560009.   */
15231 +      %let sasEnv=%sysfunc(getlocenv());
15232 +      %if %upcase(&EM_PROPERTY_FILETYPE) = XLS and %upcase(&sasEnv) ^= SBCS %then %do;
15233 +         dbms=EXCEL
15234 +      %end;
15236 +      replace;
15237 +      %if %substr(%upcase(&EM_PROPERTY_FILETYPE),1,2)=WK | %upcase(&EM_PROPERTY_FILETYPE)=XLS
15238 +       | %upcase(&EM_PROPERTY_FILETYPE)=DLM | %upcase(&EM_PROPERTY_FILETYPE)=CSV
15239 +       | %upcase(&EM_PROPERTY_FILETYPE)=TAB | %upcase(&EM_PROPERTY_FILETYPE)=TXT %then %do;
15240 +        %if %length(&EM_PROPERTY_NAMEROW) > 0 %then %do;
15241 +            getnames=&EM_PROPERTY_NAMEROW;
15242 +        %end;
15243 +      %end;
15244 +      %if %upcase(&EM_PROPERTY_FILETYPE)=CSV | %upcase(&EM_PROPERTY_FILETYPE)=DLM |
15245 +          %upcase(&EM_PROPERTY_FILETYPE=TXT)  %then %do;
15246 +         %if (%length(%trim(%bquote(&EM_PROPERTY_DELIMITER))) > 0) %then %do;
15247 +            %if "%upcase(&EM_PROPERTY_DELIMITER)"="SP" %then %do;
15248 +               delimiter=" ";
15249 +            %end;
15250 +            %else %if "%upcase(&EM_PROPERTY_DELIMITER)"="TAB" %then %do;
15251 +               /* Do not specifiy a delimiter */
15252 +            %end;
15253 +            %else %do;
15254 +               delimiter="&EM_PROPERTY_DELIMITER";
15255 +            %end;
15256 +         %end;
15257 +         %if %eval(&EM_PROPERTY_SKIPROWS > 0) %then %do;
15258 +            datarow=&EM_PROPERTY_SKIPROWS;
15259 +            /* Guessingrows must be >= skiprows */
15260 +            %if %eval(&EM_PROPERTY_GUESSROWS < &EM_PROPERTY_SKIPROWS ) %then %do;
15261 +              %let EM_PROPERTY_GUESSROWS = &EM_PROPERTY_SKIPROWS;
15262 +            %end;
15263 +         %end;
15264 +         %if %eval(&EM_PROPERTY_GUESSROWS > 0) %then %do;
15265 +            guessingrows=&EM_PROPERTY_GUESSROWS;
15266 +         %end;
15267 +       %end;
15268 +      %if %upcase(&EM_PROPERTY_FILETYPE)=DTA | %upcase(&EM_PROPERTY_FILETYPE)=JMP
15269 +                 | %upcase(&EM_PROPERTY_FILETYPE)=SAV %then %do;
15270 +            FMTLIB = work.formats;
15271 +      %end;
15272 +   %end;
15273 +   run;
15274 +%mend procimport;
15276 +%macro train;
15278 +   %let vvnString = %sysfunc(getoption(validvarname));
15280 +   %em_getname(key=DATA,           type=DATA);
15281 +   %em_getname(key=EMCMETADEFAULT, type=DATA);
15282 +   %em_getname(key=EMTMETADEFAULT, type=DATA);
15283 +   %em_getname(key=EMSTATDEFAULT, type=DATA);
15285 +   %appendExt;
15287 +   %let _IFILENAME = %nrbquote(%trim(&EM_PROPERTY_IFILENAME));
15288 +   %if %upcase(&EM_PROPERTY_IMPORTTYPE) = LOCAL %then %do;
15289 +       %if %nrbquote(%sysfunc(fileexist(&EM_USER_USERIMPORTFILE))) %then
15290 +           %let _IFILENAME = %nrbquote(&EM_USER_USERIMPORTFILE);
15291 +   %end;
15293 +   %if ^%sysfunc(fileexist(%nrbquote(&_IFILENAME))) %then %do;
15294 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.NOTRAININGCODEFILE,%nrbquote(&_IFILENAME);
15295 +       %goto endtrain;
15296 +   %end;
15298 +   options validvarname=ANY;
15299 +   %procimport(out=work.importfile);
15301 +   %if %upcase(&EM_PROPERTY_FILETYPE) = DTA | %upcase(&EM_PROPERTY_FILETYPE) = JMP
15302 +              | %upcase(&EM_PROPERTY_FILETYPE)=SAV %then %do;
15303 +      %global fmtcnt;
15304 +      %let fmtcnt=0;
15305 +      proc contents data=work.importfile out=work.impattrs noprint;
15306 +      run;
15307 +      data _null_;
15308 +        set work.impattrs;
15309 +        if _n_=1 then i=0;
15310 +        if substr(format,1,1) ^= "$" and length(trim(format)) > 1 then do;
15311 +           i = i+1;
15312 +           varname = substr(name, 1, length(name));
15313 +           call symput("fmt"||left(i), trim(format)||".");
15314 +           call symput("varname"||left(i), varname);
15315 +           call symput("fmtcnt",left(i));
15316 +      end;
15317 +      retain i;
15318 +     run;
15319 +    %if &fmtcnt > 0 %then %do;
15320 +       %dropformatvars;
15321 +    %end;
15322 +    proc datasets lib=work memtype=data nolist;
15323 +        modify importfile;
15324 +        attrib _all_ format=;
15325 +    run;
15326 +    quit;
15327 +   %end;
15329 +   %let _fimportObs  = 0;
15330 +   %let _fimportVars = 0;
15331 +   %if %sysfunc(exist(work.importFile)) %then %do;
15332 +       %let dsid = %sysfunc(open(work.importFile));
15333 +       %if &dsid %then %do;
15334 +           %let _fimportObs  = %sysfunc(attrn(&dsid, NOBS));
15335 +           %let _fimportVars = %sysfunc(attrn(&dsid, NVARS));
15336 +       %let dsid = %sysfunc(close(&dsid));
15337 +       %end;
15338 +   %end;
15340 +   %if ^&_fimportObs %then %do;
15341 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.FILE_NO_OBS;
15342 +       %goto endtrain;
15343 +   %end;
15344 +   %if ^&_fimportVars %then %do;
15345 +       %let EMEXCEPTIONSTRING = exception.server.EMTOOL.FILE_NO_VARS;
15346 +       %goto endtrain;
15347 +   %end;
15349 +   data &em_user_data;
15350 +      set work.importfile(obs=&EM_PROPERTY_MAXROWS);
15351 +   run;
15352 +   %keepordrop;
15354 +   %em_getname(key=EMSTAT,     type=DATA);
15356 +   proc datasets lib=&em_lib nolist;
15357 +      delete &em_nodeid._EMSTATDEFAULT &em_nodeid._EMINFO;
15358 +   run;
15360 +   %if "&em_property_advancedadvisor" eq "Y" %then %do;
15361 +        %EmAdviseColumns(&em_user_data, applyIntervalLevelLowerLimit=Y,
15362 +            intervalLevelLowerLimit=20, applyMaxPercentMissing=Y,
15363 +            maxPercentMissing=50, applyMaxClassLevels=Y,
15364 +            maxClassLevels=20, identifyEmptyColumns=Y,
15365 +            outdata=&em_user_EMCMETADEFAULT,
15366 +            computeStat=Y, statisticData=&em_user_EMSTATDEFAULT);
15368 +        data &em_user_emcmetadefault;
15369 +           set &em_user_emcmetadefault;
15370 +           drop nlevel pctmiss min max mean std skewness kurtosis;
15371 +        run;
15373 +        data &em_data_eminfo;
15374 +           length TARGET KEY $32  DATA $43;
15375 +           TARGET=""; KEY="STATS"; DATA="&em_user_emstatdefault"; output;
15376 +        run;
15378 +        %let EM_META_ADVISOR=ADVANCED;
15380 +   %end;
15381 +   %else %do;
15382 +       %EmAdviseColumns(&em_user_data, applyIntervalLevelLowerLimit=N,
15383 +            applyMaxPercentMissing=N, applyMaxClassLevels=N,
15384 +            identifyEmptyColumns=N,   maxLevelDetection=0,
15385 +            outdata=&em_user_EMCMETADEFAULT, computeStat=N, statisticData=WORK.STATISTIC);
15387 +            %if "&em_property_summarize" eq "Y" %then %do;
15388 +                %em_getname(key=EMSTAT,  type=DATA);
15389 +                data &em_data_eminfo;
15390 +                   length TARGET KEY $32  DATA $43;
15391 +                   TARGET=""; KEY="STATS"; DATA="&em_user_emstat"; output;
15392 +                run;
15393 +            %end;
15395 +        %let EM_META_ADVISOR=BASIC;
15397 +   %end;
15399 +   %em_getname(key=VVNLABEL, type=FILE, extension=sas);
15400 +   data _null_;
15401 +      fname = '_text';
15402 +      rc=filename(fname, "&em_user_vvnlabel");
15403 +      if ^rc and fexist(fname) then
15404 +         rc=fdelete(fname);
15405 +     rc=filename(fname);
15406 +   run;
15409 +   /* Validvarname Case */
15410 +   %let newNameFlag = 0;
15411 +   %if %sysfunc(exist(&em_user_EMCMETADEFAULT)) %then %do;
15412 +       %let dsid = %sysfunc(open(&em_user_EMCMETADEFAULT));
15413 +        %if &dsid %then %do;
15414 +            %let newNameFlag = %sysfunc(varnum(&dsid, NEWNAME));
15415 +            %let dsid = %sysfunc(close(&dsid));
15416 +       %end;
15417 +   %end;
15419 +   %if %sysevalf(&newNameFlag>0) %then %do;
15420 +       proc contents data=work.importfile noprint out=work._any(keep=VARNUM NAME LABEL);
15421 +       run;
15422 +       proc sort data=work._any; by VARNUM; run; quit;
15424 +       options validvarname=V7;
15426 +       %procimport(out=work.importfile2);
15428 +       options validvarname=ANY;
15430 +       proc contents data=work.importfile2 noprint out=work._v7(rename=(NAME=V7NAME) keep=VARNUM NAME LABEL);
15431 +       run;
15432 +       proc sort data=work._v7; by varnum; run; quit;
15434 +       filename _FI "&em_user_vvnlabel";
15435 +       data work._names;
15436 +          length string $200;
15437 +          merge work._v7 work._any;
15438 +          by VARNUM;
15439 +          file _FI;
15440 +          if V7NAME ne NAME then do;
15441 +             string = trim(V7NAME)!!'= "'!!tranwrd(trim(NAME), '"', '""')!!'"n;';
15442 +             put string;
15443 +             if LABEL eq '' then do;
15444 +                string = 'Label '!!trim(V7NAME)!!"='"!!tranwrd(trim(NAME), "'", "''")!!"';";
15445 +                put string;
15446 +             end;
15447 +             string='drop "'!!tranwrd(trim(NAME), '"', '""')!!'"n;';
15448 +             put string;
15449 +          end;
15450 +          drop string;
15451 +       run;
15452 +       data &em_user_data;
15453 +          set &em_user_data;
15454 +          %if %sysfunc(fileexist(%nrbquote(&em_user_vvnlabel))) %then %do;
15455 +              filename _FI "&em_user_vvnlabel";
15456 +              %inc _FI;
15457 +             filename _FI;
15458 +          %end;
15459 +       run;
15461 +       proc sort data=&em_user_EMCMETADEFAULT; by NAME; run;
15462 +       proc sort data=work._names;             by NAME; run;
15464 +       data &em_user_EMCMETADEFAULT;
15465 +         merge  &em_user_EMCMETADEFAULT _names;
15466 +         by NAME;
15467 +         length DROP $1;
15468 +         DROP='N';
15469 +         if NEWNAME ne NAME then do;
15470 +            if LABEL eq '' then do;
15471 +               LABEL = NAME;
15472 +            end;
15473 +            NAME=V7NAME;
15474 +         end;
15475 +         drop NEWNAME V7NAME VARNUM;
15476 +       run;
15478 +       proc datasets lib=work nolist;
15479 +          delete _any _v7 _names importfile2;
15480 +       run;
15481 +       quit;
15483 +   %end;
15484 +   %else %do;
15485 +       data &em_user_EMCMETADEFAULT;
15486 +          set &em_user_EMCMETADEFAULT;
15487 +          length DROP $1;
15488 +          DROP='N';
15489 +       run;
15490 +   %end;
15492 +    %EmAdviseTable(&em_user_data, outdata=&em_user_EMTMETADEFAULT, newdataflag=Y);
15494 +   data _temp;
15495 +      set &em_user_emtmetadefault(rename=(ROLE=PORT MEMNAME=DATASET CRDATE=MODTIME));
15496 +      keep PORT LIBNAME DATASET MODTIME COLUMNMETA COLUMNMETAMODTIME NOBS;
15497 +      PORT='DATA'; COLUMNMETA="&em_nodeid._EMCMETADEFAULT";
15498 +      COLUMNMETAMODTIME=MODTIME;
15499 +   run;
15500 +   proc sort data=&em_data_importset;
15501 +      by PORT;
15502 +   run;
15503 +   data &em_data_importset;
15504 +      merge &em_data_importset _temp;
15505 +      by PORT;
15506 +      if PORT='DATA' then ROLE="&em_property_role";
15507 +   run;
15509 +    %em_getname(key=VARIABLESETDELTA, type=FILE, extension=txt);
15511 +    %if %sysfunc(exist(&em_user_emcmetadefault)) %then %do;
15512 +        %if %sysfunc(fileexist(&em_user_variablesetdelta)) %then %do;
15513 +            filename x "&em_user_variablesetdelta";
15514 +            data &em_data_variableset;
15515 +               set &em_user_emcmetadefault;
15516 +               %inc X;
15517 +            run;
15518 +            filename x;
15519 +        %end;
15520 +        %else %do;
15521 +            data &em_data_variableset;
15522 +               set &em_user_emcmetadefault;
15523 +            run;
15524 +        %end;
15525 +    %end;
15527 +   %if %sysfunc(exist(&em_data_variableset)) and %sysfunc(exist(&em_user_emcmetadefault)) %then %do;
15528 +      proc compare compare=&em_data_variableset base=&em_user_emcmetadefault
15529 +         noprint outnoequal outbase outcomp out=_DiffMeta noprint;
15530 +         id NAME;
15531 +      run;
15533 +         filename x1 "&EM_FILE_CDELTA_TRAIN";
15534 +         data _null_;
15535 +            length string $200;
15536 +            set _DiffMeta end=eof;
15537 +            where _type_='COMPARE';
15538 +            file x1;
15539 +            string = 'if NAME="'!!strip(NAME)!!'" then do;';
15540 +            put string;
15541 +            string = '   ROLE="'!!strip(ROLE)!!'";';
15542 +            put string;
15543 +            string=  '   LEVEL="'!!strip(LEVEL)!!'";';
15544 +            put string;
15545 +            string = '   ORDER="'!!strip(ORDER)!!'";';
15546 +            put string;
15547 +            put 'end;';
15548 +            if drop='Y' then do;
15549 +               string='if NAME="'!!strip(NAME)!!'" then delete;';
15550 +               put string;
15551 +            end;
15552 +            if eof then
15553 +               put 'drop DROP;';
15554 +         run;
15556 +         %em_getname(key=DELTACODE,      type=FILE, extension=txt);
15557 +         filename x2 "&em_user_deltacode";
15558 +         %em_copyfile(infref=x1, outfref=x2);
15559 +         filename x1;
15560 +         filename x2;
15562 +         %em_getname(key=VARIABLESETDELTA, type=FILE, extension=txt);
15563 +         filename x "&em_user_variablesetdelta";
15564 +         data _null_;
15565 +            length string $200;
15566 +            set _DiffMeta end=eof;
15567 +            where _type_='COMPARE';
15568 +            file x;
15569 +            string = 'if NAME="'!!strip(NAME)!!'" then do;';
15570 +            put string;
15571 +            string = '   ROLE="'!!strip(ROLE)!!'";';
15572 +            put string;
15573 +            string=  '   LEVEL="'!!strip(LEVEL)!!'";';
15574 +            put string;
15575 +            string = '   ORDER="'!!strip(ORDER)!!'";';
15576 +            put string;
15577 +            string = '   DROP="'!!strip(DROP)!!'";';
15578 +            put string;
15579 +            put 'end;';
15580 +         run;
15581 +         filename x;
15582 +       proc datasets lib=work nolist;
15583 +          delete _DiffMeta;
15584 +       run;
15586 +       data &em_data_exportset;
15587 +          set &em_data_exportset;
15588 +          if NODEPORT='TRAIN' then do;
15589 +             ROLE="&em_property_role";
15590 +             COLUMNMETAMODTIME=datetime();
15591 +             MODTIME=datetime();
15592 +             DATASET="&em_nodeid._train";
15593 +             COLUMNMETA="&em_nodeid._CMeta_TRAIN";
15594 +             DELTACODE="CDelta_TRAIN";
15595 +             APPLYDELTA='Y';
15596 +             EXPORT='Y';
15597 +             NEEDUPDATE='Y';
15599 +            %if "&em_property_advancedadvisor" eq "Y" %then %do;
15600 +                EMINFO="&em_data_eminfo";
15601 +                EMINFOMODTIME=datetime();
15602 +            %end;
15603 +            %else %do;
15604 +                EMINFO='';
15605 +                EMINFOMODTIME=.;
15606 +            %end;
15607 +          end;
15608 +       run;
15609 +   %end;
15611 +  proc contents data=&em_user_data;
15612 +  run;
15613 +  proc datasets library=work nolist;
15614 +   delete importfile importattrs new;
15615 +   quit;
15616 +  run;
15618 +  /* Reset VALIDVARNAME to original settings */
15619 +  options validvarname=&vvnString;
15621 +  %endtrain:
15622 +%mend train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
filetype=*csv*
delimiter=*,*
 
15623   /**********************************************************************
15624   *   PRODUCT:   SAS
15625   *   VERSION:   9.4
15626   *   CREATOR:   External File Interface
15627   *   DATE:      23APR20
15628   *   DESC:      Generated SAS Datastep Code
15629   *   TEMPLATE SOURCE:  (None Specified.)
15630   ***********************************************************************/
15631      data WORK.IMPORTFILE    ;
15632      %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
15633      infile 'P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\USERIMPORTFILE.csv' delimiter = ',' MISSOVER DSD lrecl=32767 firstobs=2 ;
15634         informat Username $12. ;
15635         informat Message $261. ;
15636         informat "Character Count"N best32. ;
15637         informat "Retweet Count"N best32. ;
15638         informat "Like Count"N best32. ;
15639         informat "Total Actions"N best32. ;
15640         informat Type $6. ;
15641         format Username $12. ;
15642         format Message $261. ;
15643         format "Character Count"N best12. ;
15644         format "Retweet Count"N best12. ;
15645         format "Like Count"N best12. ;
15646         format "Total Actions"N best12. ;
15647         format Type $6. ;
15648      input
15649                  Username $
15650                  Message $
15651                  "Character Count"N
15652                  "Retweet Count"N
15653                  "Like Count"N
15654                  "Total Actions"N
15655                  Type $
15656      ;
15657      if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
15658      run;
 
NOTE: The infile 'P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\USERIMPORTFILE.csv' is:
      Filename=P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\USERIMPORTFILE.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=1396666,
      Last Modified=23Apr2020:01:23:30,
      Create Time=22Apr2020:22:27:34
 
NOTE: 3849 records were read from the infile 'P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\USERIMPORTFILE.csv'.
      The minimum record length was 20.
      The maximum record length was 305.
NOTE: The data set WORK.IMPORTFILE has 3849 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
3849 rows created in WORK.IMPORTFILE from P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\USERIMPORTFILE.csv.
 
 
 
NOTE: WORK.IMPORTFILE data set was successfully created.
NOTE: The data set WORK.IMPORTFILE has 3849 observations and 7 variables.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.23 seconds
      cpu time            0.15 seconds
 
 
 
NOTE: There were 3849 observations read from the data set WORK.IMPORTFILE.
NOTE: The data set EMWS1.FIMPORT_DATA has 3849 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The data set WORK.IMPORTATTRS has 7 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Numeric values have been converted to character values at the places given by: (Line):(Column).
      23:137
NOTE: There were 7 observations read from the data set WORK.IMPORTATTRS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
nobs=7  maxcols=10000
 
NOTE: The file EMWS1.FIMPORT_EMSTATDEFAULT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.FIMPORT_EMINFO (memtype=DATA) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
 
15659  %let SYSCC = 0;
15660  %let _dsidTable = 0;
15661  %let _engineTable =;
15662  data _null_;
15663  dsid = open('EMWS1.FIMPORT_DATA');
15664  call symput('_dsidTable', strip(put(dsid, best.)));
15665  if dsid then do;
15666  call symput('_engineTable', attrc(dsid, 'ENGINE'));
15667  dsid = close(dsid);
15668  end;
15669  run;
 
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
15670  options fmterr;
15671  data _metaTestView;
15672  set EMWS1.FIMPORT_DATA;
15673  if _N_=1 then do;
15674  output;
15675  stop;
15676  end;
15677  run;
 
NOTE: There were 1 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
15678  proc contents data=EMWS1.FIMPORT_DATA
15679  out=WORK.M3Q3KMNS noprint;
15680  run;
 
NOTE: The data set WORK.M3Q3KMNS has 7 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
15681  data WORK.M3Q3KMNS;
15682  length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
15683  label NAME =;
15684  set WORK.M3Q3KMNS(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
15685  if itype = 1 then type = 'N';
15686  else type = 'C';
15687  if formatl > 0 then do;
15688  if format ne '' then do;
15689  if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
15690  else format = strip(format)!!strip(put(formatl, best12.))!!'.';
15691  end;
15692  else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
15693  end;
15694  else if format ne '' then format = strip(format)!!'.';
15695  if informl > 0 then do;
15696  if informat ne ' ' then do;
15697  if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
15698  else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
15699  end;
15700  else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
15701  end;
15702  else if informat ne '' then informat = strip(informat)!!'.';
15703  if idxusage = 'NONE' then index ="N";
15704  else index = "Y";
15705  indextype = idxusage;
15706  drop idxusage itype formatl formatd informl informd;
15707  run;
 
NOTE: There were 7 observations read from the data set WORK.M3Q3KMNS.
NOTE: The data set WORK.M3Q3KMNS has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
15708  data WORK.M3Q3KMNS;
15709  length UNAME $64;
15710  set WORK.M3Q3KMNS;
15711  UNAME = upcase(NAME);
15712  run;
 
NOTE: There were 7 observations read from the data set WORK.M3Q3KMNS.
NOTE: The data set WORK.M3Q3KMNS has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
15716  data WORK.M2GGWNDM;
15717  drop UNAME;
15718  set WORK.M2GGWNDM;
15719  run;
 
NOTE: There were 7 observations read from the data set WORK.M2GGWNDM.
NOTE: The data set WORK.M2GGWNDM has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.34 seconds
      cpu time            0.14 seconds
 
 
 
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK._ANY has 7 observations and 3 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._ANY.
NOTE: The data set WORK._ANY has 7 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
filetype=*csv*
delimiter=*,*
 
15977   /**********************************************************************
15978   *   PRODUCT:   SAS
15979   *   VERSION:   9.4
15980   *   CREATOR:   External File Interface
15981   *   DATE:      23APR20
15982   *   DESC:      Generated SAS Datastep Code
15983   *   TEMPLATE SOURCE:  (None Specified.)
15984   ***********************************************************************/
15985      data WORK.IMPORTFILE2    ;
15986      %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
15987      infile 'P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\USERIMPORTFILE.csv' delimiter = ',' MISSOVER DSD lrecl=32767 firstobs=2 ;
15988         informat Username $12. ;
15989         informat Message $261. ;
15990         informat Character_Count best32. ;
15991         informat Retweet_Count best32. ;
15992         informat Like_Count best32. ;
15993         informat Total_Actions best32. ;
15994         informat Type $6. ;
15995         format Username $12. ;
15996         format Message $261. ;
15997         format Character_Count best12. ;
15998         format Retweet_Count best12. ;
15999         format Like_Count best12. ;
16000         format Total_Actions best12. ;
16001         format Type $6. ;
16002      input
16003                  Username $
16004                  Message $
16005                  Character_Count
16006                  Retweet_Count
16007                  Like_Count
16008                  Total_Actions
16009                  Type $
16010      ;
16011      if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
16012      run;
 
NOTE: The infile 'P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\USERIMPORTFILE.csv' is:
      Filename=P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\USERIMPORTFILE.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=1396666,
      Last Modified=23Apr2020:01:23:30,
      Create Time=22Apr2020:22:27:34
 
NOTE: 3849 records were read from the infile 'P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\USERIMPORTFILE.csv'.
      The minimum record length was 20.
      The maximum record length was 305.
NOTE: The data set WORK.IMPORTFILE2 has 3849 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
3849 rows created in WORK.IMPORTFILE2 from P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\USERIMPORTFILE.csv.
 
 
 
NOTE: WORK.IMPORTFILE2 data set was successfully created.
NOTE: The data set WORK.IMPORTFILE2 has 3849 observations and 7 variables.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.19 seconds
      cpu time            0.12 seconds
 
 
 
NOTE: The data set WORK._V7 has 7 observations and 3 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._V7.
NOTE: The data set WORK._V7 has 7 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The file _FI is:
      Filename=P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\VVNLABEL.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=23Apr2020:10:27:17,
      Create Time=23Apr2020:10:27:17
 
NOTE: 12 records were written to the file _FI.
      The minimum record length was 19.
      The maximum record length was 40.
NOTE: There were 7 observations read from the data set WORK._V7.
NOTE: There were 7 observations read from the data set WORK._ANY.
NOTE: The data set WORK._NAMES has 7 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _FI is file P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\VVNLABEL.sas.
16013 +Character_Count= "Character Count"n;
16014 +Label Character_Count='Character Count';
16015 +drop "Character Count"n;
16016 +Retweet_Count= "Retweet Count"n;
16017 +Label Retweet_Count='Retweet Count';
16018 +drop "Retweet Count"n;
16019 +Like_Count= "Like Count"n;
16020 +Label Like_Count='Like Count';
16021 +drop "Like Count"n;
16022 +Total_Actions= "Total Actions"n;
16023 +Label Total_Actions='Total Actions';
16024 +drop "Total Actions"n;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref _FI has been deassigned.
 
NOTE: There were 3849 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: The data set EMWS1.FIMPORT_DATA has 3849 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 7 observations read from the data set EMWS1.FIMPORT_EMCMETADEFAULT.
NOTE: The data set EMWS1.FIMPORT_EMCMETADEFAULT has 7 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK._NAMES.
NOTE: The data set WORK._NAMES has 7 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set EMWS1.FIMPORT_EMCMETADEFAULT.
NOTE: There were 7 observations read from the data set WORK._NAMES.
NOTE: The data set EMWS1.FIMPORT_EMCMETADEFAULT has 7 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK._ANY (memtype=DATA).
NOTE: Deleting WORK._V7 (memtype=DATA).
NOTE: Deleting WORK._NAMES (memtype=DATA).
NOTE: Deleting WORK.IMPORTFILE2 (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
16025  %let SYSCC = 0;
16026  data EMWS1.FIMPORT_EMTMETADEFAULT;
16027  length LIBNAME $8;
16028  LIBNAME = "EMWS1";
16029  run;
 
NOTE: The data set EMWS1.FIMPORT_EMTMETADEFAULT has 1 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.26 seconds
      cpu time            0.09 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS1.FIMPORT_EMTMETADEFAULT.
NOTE: The data set WORK._TEMP has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS1.FIMPORT_IMPORTSET.
NOTE: The data set EMWS1.FIMPORT_IMPORTSET has 15 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set EMWS1.FIMPORT_IMPORTSET.
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS1.FIMPORT_IMPORTSET has 15 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file X is file P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\VARIABLESETDELTA.txt.
16058 +if NAME="Total_Actions" then do;
16059 +ROLE="TARGET";
16060 +LEVEL="INTERVAL";
16061 +ORDER="";
16062 +DROP="N";
16063 +end;
16064 +if NAME="Username" then do;
16065 +ROLE="ID";
16066 +LEVEL="NOMINAL";
16067 +ORDER="";
16068 +DROP="N";
16069 +end;
NOTE: %INCLUDE (level 1) ending.
 
NOTE: There were 7 observations read from the data set EMWS1.FIMPORT_EMCMETADEFAULT.
NOTE: The data set EMWS1.FIMPORT_VARIABLESET has 7 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: There were 7 observations read from the data set EMWS1.FIMPORT_VARIABLESET.
NOTE: There were 7 observations read from the data set EMWS1.FIMPORT_EMCMETADEFAULT.
NOTE: The data set WORK._DIFFMETA has 4 observations and 23 variables.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file X1 is:
      Filename=P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=23Apr2020:10:27:18,
      Create Time=22Apr2020:22:25:33
 
NOTE: 11 records were written to the file X1.
      The minimum record length was 4.
      The maximum record length was 32.
NOTE: There were 2 observations read from the data set WORK._DIFFMETA.
      WHERE _type_='COMPARE';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: The file X2 is:
      Filename=P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\DELTACODE.txt,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=23Apr2020:10:27:18,
      Create Time=22Apr2020:22:27:37
 
NOTE: 11 records were written to the file X2.
      The minimum record length was 4.
      The maximum record length was 32.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X1 has been deassigned.
NOTE: Fileref X2 has been deassigned.
 
NOTE: The file X is:
      Filename=P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\VARIABLESETDELTA.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=23Apr2020:10:27:18,
      Create Time=22Apr2020:22:27:37
 
NOTE: 12 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 32.
NOTE: There were 2 observations read from the data set WORK._DIFFMETA.
      WHERE _type_='COMPARE';
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: Deleting WORK._DIFFMETA (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
NOTE: The PROCEDURE CONTENTS printed page 2.
 
 
NOTE: The file WORK.NEW (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.IMPORTFILE (memtype=DATA).
NOTE: Deleting WORK.IMPORTATTRS (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
16070  *------------------------------------------------------------*;
16071  * End TRAIN: FIMPORT;
16072  *------------------------------------------------------------*;
 
16073  *------------------------------------------------------------*;
16074  * Close any missing semi colons;
16075  *------------------------------------------------------------*;
16076  ;
16077  ;
16078  ;
16079  ;
16080  quit;
16081  *------------------------------------------------------------*;
16082  * Close any unbalanced quotes;
16083  *------------------------------------------------------------*;
16084  /*; *"; *'; */
16085  ;
16086  run;
16087  quit;
16088  /* Reset EM Options */
16089  options formchar="|----|+|---+=|-/\<>*";
16090  options nocenter ls=256 ps=10000;
16091  goptions reset=all device=GIF NODISPLAY;
 
*------------------------------------------------------------*
* Score Log
Date:                April 23, 2020
Time:                10:27:20
*------------------------------------------------------------*
16193  %let EMEXCEPTIONSTRING=;
16194  *------------------------------------------------------------*;
16195  * SCORE: FIMPORT;
16196  *------------------------------------------------------------*;
16197  %let EM_ACTION = SCORE;
16198  %let syscc = 0;
16199  /* Fimport.source */
16200  %macro main;
16201        %if %upcase(&EM_ACTION) = CREATE %then %do;
16202           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16203           %include temp;
16204           filename temp;
16205           %create;
16206        %end;
16207        %else
16208        %if %upcase(&EM_ACTION) = TRAIN %then %do;
16209           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16210           %include temp;
16211           filename temp;
16212           %train;
16213        %end;
16214        %else
16215        %if %upcase(&EM_ACTION) = UPDATE %then %do;
16216           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16217           %include temp;
16218           filename temp;
16219           %update;
16220        %end;
16221        %else
16222        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16223           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16224           %include temp;
16225           filename temp;
16226           %property;
16227        %end;
16228         %else
16229        %if %upcase(&EM_ACTION) = SCORE %then %do;
16230           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16231           %include temp;
16232           filename temp;
16233           %score;
16234        %end;
16235        %else
16236        %if %upcase(&EM_ACTION) = REPORT %then %do;
16237           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16238           %include temp;
16239           filename temp;
16240           %report;
16241        %end;
16242        %else
16243        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16244           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16245           %include temp;
16246           filename temp;
16247           %openvariableset;
16248        %end;
16249        %else
16250        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16251           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16252           %include temp;
16253           filename temp;
16254           %closevariableset;
16255        %end;
16256  %mend main;
16257  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_SCORE.SOURCE.
16258 +%macro score;
16259 +
16260 +   filename x "&EM_NODEDIR.&EM_DSEP._updatePath.st";
16261 +   data _null_;
16262 +      file x;
16263 +      put ' ';
16264 +   run;
16265 +   filename x;
16266 +
16267 +   %em_getname(key=DATA, type=DATA);
16268 +   %if %sysfunc(exist(&em_user_data)) %then %do;
16269 +       data &em_export_train / view=&em_export_train;
16270 +          set &em_user_data;
16271 +       run;
16272 +   %end;
16273 +
16274 +%mend score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The file X is:
      Filename=P:\Final Project\Twitter_Content_Engineering\Workspaces\EMWS1\FIMPORT\_updatePath.st,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=23Apr2020:10:27:19,
      Create Time=23Apr2020:10:23:20
 
NOTE: 1 record was written to the file X.
      The minimum record length was 1.
      The maximum record length was 1.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
NOTE: Fileref X has been deassigned.
 
NOTE: DATA STEP view saved on file EMWS1.FIMPORT_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.00 seconds
 
 
16275  *------------------------------------------------------------*;
16276  * End SCORE: FIMPORT;
16277  *------------------------------------------------------------*;
 
16279  *------------------------------------------------------------*;
16280  * FIMPORT: Computing metadata for TRAIN data;
16281  *------------------------------------------------------------*;
 
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                April 23, 2020
Time:                10:27:21
*------------------------------------------------------------*
16653  %let EMEXCEPTIONSTRING=;
16654  *------------------------------------------------------------*;
16655  * REPORT: FIMPORT;
16656  *------------------------------------------------------------*;
16657  %let EM_ACTION = REPORT;
16658  %let syscc = 0;
16659  /* Fimport.source */
16660  %macro main;
16661        %if %upcase(&EM_ACTION) = CREATE %then %do;
16662           filename temp catalog 'sashelp.emsamp.Fimport_create.source';
16663           %include temp;
16664           filename temp;
16665           %create;
16666        %end;
16667        %else
16668        %if %upcase(&EM_ACTION) = TRAIN %then %do;
16669           filename temp catalog 'sashelp.emsamp.Fimport_train.source';
16670           %include temp;
16671           filename temp;
16672           %train;
16673        %end;
16674        %else
16675        %if %upcase(&EM_ACTION) = UPDATE %then %do;
16676           filename temp catalog 'sashelp.emsamp.Fimport_update.source';
16677           %include temp;
16678           filename temp;
16679           %update;
16680        %end;
16681        %else
16682        %if %upcase(&EM_ACTION) = PROPERTY %then %do;
16683           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16684           %include temp;
16685           filename temp;
16686           %property;
16687        %end;
16688         %else
16689        %if %upcase(&EM_ACTION) = SCORE %then %do;
16690           filename temp catalog 'sashelp.emsamp.Fimport_score.source';
16691           %include temp;
16692           filename temp;
16693           %score;
16694        %end;
16695        %else
16696        %if %upcase(&EM_ACTION) = REPORT %then %do;
16697           filename temp catalog 'sashelp.emsamp.Fimport_report.source';
16698           %include temp;
16699           filename temp;
16700           %report;
16701        %end;
16702        %else
16703        %if %upcase(&EM_ACTION) = OPENVARIABLESET %then %do;
16704           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16705           %include temp;
16706           filename temp;
16707           %openvariableset;
16708        %end;
16709        %else
16710        %if %upcase(&EM_ACTION) = CLOSEVARIABLESET %then %do;
16711           filename temp catalog 'sashelp.emsamp.Fimport_actions.source';
16712           %include temp;
16713           filename temp;
16714           %closevariableset;
16715        %end;
16716  %mend main;
16717  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMSAMP.FIMPORT_REPORT.SOURCE.
16718 +%macro report;
16719 +    %em_getname(key=EMSTAT,     type=DATA);
16720 +    %em_getname(key=EMINFO,     type=DATA);
16721 +    %em_getname(key=CLASS,      type=DATA);
16722 +    %em_getname(key=INTERVAL,   type=DATA);
16723 +
16724 +    %em_REPORT(key=EMSTAT,   viewtype=DATA, description=EMSTAT, block=Report, autodisplay=Y);
16725 +    %em_REPORT(key=INTERVAL, viewtype=LATTICE, LATTICETYPE=HISTOGRAM, LATTICEX=VARIABLE, DISCRETEX=Y, X=VALUE,FREQ=PERCENT,block=Report, description=INTERVALTARGET, autodisplay=N);
16726 +    %em_REPORT(key=CLASS, viewtype=LATTICE, LATTICEtype=BAR, LATTICEX=VARIABLE, X=VALUE,FREQ=PERCENT, block=Report, description=CLASSTARGET, autodisplay=Y);
16727 +
16728 +    %if &em_property_summarize eq Y %then %do;
16729 +        filename temp catalog 'sashelp.emmeta.emadvisestatistics.source';
16730 +        %include temp;
16731 +        filename temp;
16732 +
16733 +        data work.tempmeta;
16734 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
16735 +           if ROLE='TARGET' and LEVEL ne 'INTERVAL' then output;
16736 +         run;
16737 +
16738 +        %class_profile(DATA=&em_export_train, OUTPUT=&em_user_class, VARS=,
16739 +                      METADATA=tempmeta, STAT=_STAT, FREQ=);
16740 +
16741 +         data work.tempmeta;
16742 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
16743 +            if ROLE='TARGET' and LEVEL eq 'INTERVAL' then output;
16744 +         run;
16745 +         %var_profile(DATA=&em_export_train, OUTPUT=&em_user_INTERVAL, VARS=, METADATA=tempmeta, COMPUTESTAT=Y, STAT=_STAT, FREQ=,
16746 +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
16747 +
16748 +        data work.tempmeta;
16749 +           set &em_lib..&em_nodeid._CMETA_TRAIN;
16750 +        run;
16751 +
16752 +        %if "&em_property_advancedadvisor" eq "N" %then %do;
16753 +            %EmAdviseStat(&em_export_train, maxClassLevels=32, metadata=tempmeta, statisticData=&em_user_emstat);
16754 +
16755 +            data &em_data_exportset;
16756 +                 set &em_data_exportset;
16757 +                 if NODEPORT='TRAIN' then do;
16758 +                    EMINFO="&em_data_eminfo";
16759 +                    EMINFOMODTIME=datetime();
16760 +                 end;
16761 +            run;
16762 +        %end;
16763 +        %else %do;
16764 +            %em_getname(key=EMSTATDEFAULT,     type=DATA);
16765 +            %if %sysfunc(exist(&em_user_emstatdefault)) %then %do;
16766 +                data &em_user_emstat /  view=&em_user_emstat;
16767 +                   set &em_user_emstatdefault;
16768 +                run;
16769 +            %end;
16770 +        %end;
16771 +    %end;
16772 +    %else %do;
16773 +        %if "&em_property_advancedadvisor" eq "N" %then %do;
16774 +            proc datasets lib=&em_lib nolist;
16775 +               delete &em_nodeid._EMINFO;
16776 +            run;
16777 +            quit;
16778 +            data &em_data_exportset;
16779 +                 set &em_data_exportset;
16780 +                 if NODEPORT='TRAIN' then do;
16781 +                    EMINFO="";
16782 +                    EMINFOMODTIME=.;
16783 +                 end;
16784 +            run;
16785 +        %end;
16786 +    %end;
16787 +
16788 +    data &em_data_exportset;
16789 +       set &em_data_exportset;
16790 +       if NODEPORT='TRAIN' then do;
16791 +          ROLE="&em_property_role";
16792 +       end;
16793 +    run;
16794 +
16795 +    %if %sysfunc(exist(&em_data_variableSet)) %then %do;
16796 +        proc freq data=&em_data_variableset noprint;
16797 +             table ROLE*LEVEL/out=work.tempMeta;
16798 +        run;
16799 +        proc print data=work.tempmeta label noobs;
16800 +           var ROLE LEVEL COUNT;
16801 +           label ROLE  = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))"
16802 +                 LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))"
16803 +                 COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
16804 +        title9  ' ';
16805 +        title10  "%sysfunc(sasmsg(sashelp.dmine, rpt_exptattributes_title, NOQUOTE, TRAIN))";
16806 +        run;
16807 +        title10;
16808 +    %end;
16809 +
16810 +    %if %sysfunc(exist(work.tempmeta)) %then %do;
16811 +        proc datasets lib=work nolist;
16812 +           delete tempmeta;
16813 +        run;
16814 +        quit;
16815 +    %end;
16816 +
16817 +%mend report;
16818 +
16819 +
16820 +
16821 +
16822 +
16823 +
16824 +
16825 +
16826 +
16827 +
16828 +
16829 +
16830 +
16831 +
16832 +
16833 +
16834 +
16835 +
16836 +
16837 +
16838 +
16839 +
16840 +
16841 +
16842 +
16843 +
16844 +
16845 +
16846 +
16847 +
16848 +
16849 +
16850 +
16851 +
16852 +
16853 +
16854 +
16855 +
16856 +
16857 +
16858 +
16859 +
16860 +
16861 +
16862 +
16863 +
16864 +
16865 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 396 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: The file EMWS1.FIMPORT_EMINFO (memtype=DATA) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set EMWS1.FIMPORT_EXPORTSET.
NOTE: The data set EMWS1.FIMPORT_EXPORTSET has 6 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 7 observations read from the data set EMWS1.FIMPORT_VARIABLESET.
NOTE: The data set WORK.TEMPMETA has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK.TEMPMETA.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Deleting WORK.TEMPMETA (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
16866  *------------------------------------------------------------*;
16867  * End REPORT: FIMPORT;
16868  *------------------------------------------------------------*;
 
16869  /* Reset EM Options */
16870  options formchar="|----|+|---+=|-/\<>*";
16871  options nocenter ls=256 ps=10000;
16872  goptions reset=all device=GIF NODISPLAY;
 
16873  proc sort data=WORK.EM_USER_REPORT;
16874  by ID VIEW;
16875  run;
 
NOTE: There were 396 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 396 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
